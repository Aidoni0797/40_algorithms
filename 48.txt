Сортировка пузырьком

Сортировка пузырьком (bubble sort) - это самый простой и медленный алгоритм сортировки. Он спроектирован так,
что наибольшее значение перемещается вправо по списку на каждой итерации цикла. При наихудшем сценарии
производительность этого алгоритма равна O(n*n), поэтому его следует использовать только для небольших
наборов данных.

Логика сортировки пузырьком

В основе сортировки пузырьком лежит ряд итераций, называемых проходами (passes). Для списка размера N нужно
совершить N-1 проходов. Рассмотрим подробно первую итерацию: проход 1.

Цель первого прохода - вывести наибольшее значение в конец списка. По мере выполнения алгоритма оно будет
постепенно вправо по списку.

В процессе сортировки значения соседних элементов сравниваются между собой попарно. Если в паре большее значение
находится слева, происходит перестановка (обмен). Это продолжается до тех пор, пока мы не дойдем до конца
списка. Работа алгоритма показана на следующей схеме.

Теперь посмотрим, как сортировка пузырьком реализуется в Python:

#Pass 1 of Bubble Sort
lastElementIndex = len(list) - 1
print(0,list)
for idx in range(lastElementIndex):
	if list[idx]>list[idx+1]:
list[idx], list[idx+1] = list[idx+1], list[idx]
print(idx+1, list)

Первый проход сортировки пузырьком на Python выглядит следующим образом

После первой итерации алгоритма наибольшее значение оказывается в конце списка. Затем начинается следующий 
проход. Его цель - переместить второе по величине значение на предпоследнюю позицию в списке. Для этого
алгоритм снока сравнивает значения соседних элементов и меняет их местами, если нужно. Последний элемент не 
затрагивается, поскольку уже был помещен в нужную позицию на первой итерации.

Проходы выполняются до тех пор, пока все элементы данных не будут рассположены в порядке возрастания.
Чтобы  полностью отсортировать список, алгоритму потребуется N-1 проходов для списка размером N. Полная
реализация сортировки пузырьком на Python выглядит следующим образом.

Теперь рассмотрим производительность алгоритма BubbleSort.

Анализ производительности сортировки пузырьком

Легко увидеть, что сортировка пузырьком включает в себя два уровня циклов:

- Внешний цикл. Совокупность проходов. Например, первый проход - это первая итерация внешнего цикла.

- Внутренний цикл. Оставшиеся элементы в списке сортируются до тех пор, пока наибольшее значение не 
окажется справа. На первом проходе будет N-1 сравнений, на втором N-2. На каждом последующем проходе
количество сравнений будет уменьшаться на единицу.

Из-за двух уровней цикличности наихудшая сложность алгоритма равна O(n*n)