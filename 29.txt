¬ данном коде показано, как создавать кортежи:
>>> bin_colors = ('Red', 'Green', 'Blue', 'Yellow')
>>> bin_colors[1]
'Green'
>>> bin_colors[2:]
('Blue','Yellow')
>>> bin_colors[:-1]
('Rde','Green','Blue')
#Nested Tuple Data Structure (вложенный кортеж)
>>> a= (1,2,(100,200,300),6)
>>> max(a[2])
300
>>> a[2][1]
200

ќбратите внимание, что в представленном выше коде a[2] относитс€ к третьему элементу, который €вл€етс€
кортежем: (100,200,300); a[2][1] относитс€ ко второму элементу внутри этого кортежа, который €вл€етс€ 
числом 200.

ѕо возможности старайтесь использовать неизмен€емые структуры данных вместо измен€емых (например,
кортежи вместо списков), так как это улучшит производительность. ¬ особенности это касаетс€ обработки
больших данных: неизмен€емые структуры работают значительнос быстрее, чем измен€емые. ћы платим
определенную цену за возможность измен€ть элементы данных в списке.Ќужно пон€ть, действительно ли это
необходимо или же можно использовать кортеж, что будет намного быстрее.

