Вопрос 2. Является ли данный алгоритм оптимальным способом получения результата?

Более развернто этот вопрос звучит так:

Является ли алгоритм оптимальным решением и можем ли мы убедиться, что для этой задачи не существует
другого решения, которое было бы лучше нашего?

На первый взгляд, на этот вопрос ответить довольно просто. Однако в случае с некоторыми классами алгоритмов
исследователи потратили десятилетия на безуспешные попытки подтвердить оптимальность конкретного решения.

Таким образом, сначала важно понять задач и ее требования и оценить ресурсы, доступные для запуска алгоритма.
Необходимо признать следующее утверждение:

- Нужно ли стремиться найти оптимальное решение этой проблемы? Поиск и проверка оптимального решения -
очень сложный и длительный процесс. Поэтому лучше всего подойдет работоспособное (приемлемое) решение,
основанное на эвристике.

Понимание задачи и ее сложности - важно, и это помогает оценить требования к ресурсам.

Прежде чем мы углубимся в детали, давайте определим два термина.

- Полиномиальный алгоритм (polynomial algorithm). Если алгоритм имеет временную сложность O(n**k),
мы называем его полиномиальным, где k - константа.

- Сертификат (certificate). Предлагаемый вариант решения, полученный по окнчании итерации, называется сертификатом.
По мере итеративного продвижения к решению конкретной задачи мы обычно генерируем серию сертификатов.
Если решение стремится к сходимости, каждый сгенерированный сертификат будет лучше предыдущего. В какой-то
момент, когда сертификат будет соответствовать требованиям, мы выберем его в качестве окончательного решения.

В главе 1 мы ввели понятие нотации "О-большое", которое можно использвать для анализа временной сложности 
алгоритма. В котексте этого анализа мы рассматриваем следующие временные интервалы:

- время, необходимое алгоритму для получения предлагаемого решения, называемого сертификатом: t;

- время, необходимое для проверки предлагаемого решения (сертификата): t;

Определение сложности задачи

На протяжении многих лет исследовательское сообщество делило задачи на различные категории в зависимости от их
сложности. Прежде чем разрабатывать решение, имеет смысл охарактеризовать задачу. Как правило, задачи делятся
на три типа:

- Тип 1. Задачи, для которых доказано существование полиномиального алгоритма.
- Тип 2. Задачи, для которых доказано, что они не могут быть решены с помощью полиномиального алгоритма.
- Тип 3. Задачи, для которых не найден полиномиальный алгоритм, но не доказано, что его существует.

Рассмотрим различные классы задач:

- Недерминированные полиномиальные, NP(non-determmistic polynomial). Чтобы задача была NP-задачей, она
должна удослетворять следующему условию:
- гарантированно существует полиномиальный алгоритм, который может быть использован для проверки оптимальности варианта 
решения (сертификата).

- Полиномильаные, Р (polynomial). Это типы задач, которые можно (98 страницы)