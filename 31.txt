Словарь

Хранение данных в виде пар "ключ - значение" особенно полезно при работе с распределенными алгоритмами. В 
Python коллекция пар "ключ - значение" хранится в виде структуры данных, называемой словарем. Чтобы создать
словарь, в качестве атрибута следует выбрать ключ, лучше всего подходящий для идентификации данных во время
обработки. Значением ключа может быть элемент любого типа, например число или строка. В Python в качестве
значений также используются сложные типы данных, например списки. Если использовать в качестве значения ключа
словарь, можно создавать вложенные словари.

Чтобы создать простой словарь, который присваевает цвета различным переменным, пары "ключ-значение" должны быть
заключены в фигурные скобки {}. Например, следующий код создает простой словарь, состоящий из трех пар
"ключ - значение".
>>> bin_colors = (
	"manual_color": "Yellow",
	"approvd_color": "Green",
	"refused_color": "Red"
	)
>>> print(bin_colors)
('manual_color': "Yellow", 'approved_color': "Green", 'refused_color':"Red")

Три пары "ключ-значение", созданные предыдущим фрагментом кода, также проиллюстрированы.

Теперь давайте посмотрим, как получить и обновить значение, связанное с ключом.

1. Чтобы получить значение, связанное с ключом, можно использовать либо функцию get(), либо ключ в качестве
индекса:
>>> bin_colors.get('approved_color')
'Green'
>>> bin_colors['approved_color']
'Green'

2. Чтобы обновить значение, связанное с ключом, используйте следующий код:

>>> bin_colors['approved_color'] = "Purple"
>>> print(bin_colors)
{
'manual_color': 'Yellow', 'approved_color': 'Purple', 'refused_color': 'Red'
}

Данный код показывает, как обновить значение, связанное с определенным ключом в словаре.