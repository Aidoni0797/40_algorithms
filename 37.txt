АБСТРАКТНЫЕ ТИПЫ ДАННЫХ

В широком смысле абстракция - принцип, используемый для определения сложных систем с точки зрения их общих
базовых функций. Применение этой концепции при создании структур данных приводит к появлению абстрактных
типов данных (АТД). Используя АТД, мы получаем универсальную, независимую от реализации структуру данных.
Это позволяет написать более простой и чистый код алгоритма, не углубляясь в детали разработки. АТД можно
реализовать на любом языке программирования, например С++, Java, Scala. В этом разделе мы будем использовать 
АТД в Python. Начнем с вектора.

Вектор

Вектор - это одномерная структура для хранения данных, одна из самых популярных в Python. В Python имеются
два способа создания векторов.

- Использование списка Python. Самый простой способ создания вектора -  применить список Python следующим образом:

>>> myVector = [22,33,44,55]
>>> print(myVector)
[22 33 44 55]
>>> print(type(myVector))
<class 'list'>

Этот код создает список из четырех элементов.

- Использваоние массива numpy. Еще один популярный способ создания вектора - применение массивов NumPy,
как показано ниже:

>>> myVector = np.array([22,33,44,55])
>>> print(myVector)
[22 33 44 55]
>>> print(type(myVector))
<class 'numpy.ndarray'>

Обратите внимание, что мы создали MyVector, используя np.array.

В Python мы используем нижнее подчеркивание при написании целых чисел, разделяя их на разряды. Это делает их
удобочитаемыми и уменьшает вероятность ошибки, что особенно важно при работе с большими числами. Например,
один миллиард можно представить так: а = 1_000_000_000.


