Сортировка слиянием

Мы изучили два алгоритма сортировки: пузырьком и вставками. Производительность обоих будет лучше, если
данные уже частично отсортированы. Третий алгоритм, с которыми мы познакомимся, - алгоритм сортровками
слиянием (merge sort), разработанный в 1940 году Джоном фон Нейманом. Отличительной чертой этого алгоритма
является тот факт, что его производительность не зависит от упорядоченности входных данных. Подобно
MapReduce и другим алгоритмам обработки больших данных, в его основе лежит стратегия "разделяй и властвуй".
На этапе разделения алгоритм рекурсивно разбивает данные на две части до тех пор, пока размер данных
не станет меньше определенного порогового значения. На этапе слияния алгоритм объединяет данные, пока мы не 
получим окончательный результат. Логика этого алгоритма объясняется на следующей диаграмме.

Давайте сначала рассмотрим псевдокод алгоритма сортировки слиянием:

mergeSort(list, start, end)
	if (start<end)
		midPoint = (end-start) / 2 + start
		mergeSort(list, start, midPoint)
		mergeSort(list, midPoint + 1, start)
		merge(list, start, midPoint, end)

Мы видим, что алгоритм состоит из трех шагов:

1. Разделение входного списка на две равные части.

2. Использование рекурсии для разделения до тех пор, пока длина каждого списка не будет равна 1.

3. Наконец, объединение отсортированных частей в список и вывод результата.

Код реализации MergeSort показан здесь

Когда этот код выполнится в среде Python, он сгенерирует следующий вывод

Результатом работы кода является отсортированный список. (82 страница)