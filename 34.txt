Анализ временной сложности множеств

В таблице приведен анализ временной сложности для множеств.

Операция
Добавление элемента 
Сложность
О(1)

Удаление элемента
Сложность
О(1)

Копирование
Сложность
O(n)

На основании анализа сложности можно сделать вывод, что время, затраченное на добавление элемента,
не зависит от размера конкретного множества.

DataFrame

DataFrame - табличная структура данных, доступная в библиотеке Python pandas. Это одна из наиболее важных 
структур данных для алгоритмов. Она используется для обработки классических структурированных данных.
Рассмотрим таблицу:
id-name-age-decision
1-Fares-32-True
2-Elena-23-False
3-Steven-40-True

Теперь представим эту таблицу с помощью DataFrame

Простейший DataFrame может быть создан с помощью следующего кода:

>>> import pandas as pd
>>> df = pd.DataFrame([
['1', 'Fares', 32, True],
['2', 'Elena', 23, False],
['3', 'Steven', 40, True]])

>>> df.columns = ['id', 'name', 'age', 'desicion']
>>> df

- id - name - age - desicion
0 - 1 - Fares - 32 - True
1 - 2 - Elena - 23 - False
2 - 3 - Steven - 40 - True

Обратите внимание, что в данном коде df.column - это список, в котором содержатся имена столбцов.

DataFrame - используются и в других популярных языках и фремворках для реализации табличной структуры данных.
Примерами могут служить реализации табличной структуры данных. Примерами могут служить язык программирования
R и платформа Apache Spark.

-Ось. В докментации pandas один столбец или строка DataFrame называются (axis).

-Метка. DataFrame позволяет отмечать как столбцы, так и строки так называемой меткой (label).

Создание подмножества DataFrame

По сути, существуют два основных способа создания подмножества DataFrame (пусть это будет подмножество
с именем myDF):
-выбор столбца;
-выбор строки;

Рассмотрим их по очереди.

Выбор столбца

При работе с алгоритмами машинного обучения важно использовать правильный набор признаков. Далеко не все
доступные нам признаки могут понадобиться на разных этапах алгоритма. В Python отбор признаков происходит
путем выбора столбцов.

Получить доступ к столбцу можно с помощью его имени (атрибута name), как показано ниже:

>>> df[['name','age']]
 name age
0 Fares 32
1 Elena 23
2 Steven 40

Позиция столбца является детерминированной. Доступ к нему по его расположению можно получить следующим
образом:

>>> df.iloc[:,3]
0 True
1 False
2 True

Обратите внимание, что в этом коде мы извлекаем первые три строки DataFrame.

